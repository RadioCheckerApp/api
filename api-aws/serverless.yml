service: api-aws

custom:
  StationsDDBTableName: 'stations-table-${self:provider.stage}'
  TrackRecordsDDBTableName: 'trackrecords-table-${self:provider.stage}'
  TrackRecordsDDBGSITypeAirtime: 'trackrecords-table-${self:provider.stage}-gsi-type-airtime'
  authorizer:
    tracks-create:
      name: tracks-create-authorizer
      type: TOKEN
      identitySource: method.request.header.Authorization
      identityValidationExpression: Bearer ${env:TRACKS_CREATE_AUTH_TOKEN}

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - {"Fn::GetAtt": ["StationsDDBTable", "Arn"]}
        - {"Fn::GetAtt": ["TrackRecordsDDBTable", "Arn"]}
        - "Fn::Join": ["/", [
            "Fn::GetAtt": ["TrackRecordsDDBTable", "Arn"],
            "index",
            "${self:custom.TrackRecordsDDBGSITypeAirtime}"
          ]]
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - {"Fn::GetAtt": ["TrackRecordsDDBTable", "Arn"]}
  environment:
    STATIONS_TABLE: ${self:custom.StationsDDBTableName}
    TRACKRECORDS_TABLE: ${self:custom.TrackRecordsDDBTableName}
    TRACKRECORDS_TABLE_GSI_TYPE_AIRTIME: ${self:custom.TrackRecordsDDBGSITypeAirtime}
  apiKeys:
    # API keys that will be bound to the following usage plan
    # The value of the key is auto-generated by CloudFormation upon deployment
    - ${self:provider.stage}-api-key
  usagePlan:
    # Global usage plan preventing all endpoints from being called excessively
    # Note that the quota/throttling limits are shared among all functions/endpoints
    quota:
      limit: 500
      period: DAY
    throttle:
      burstLimit: 40
      rateLimit: 20

package:
 exclude:
   - ./**
 include:
   - ../bin/api-aws/**

functions:
  meta:
    handler: bin/api-aws/meta
    description: API meta information
    memorySize: 128
    events:
      - http:
          path: meta
          method: get
          private: true
  stations:
    handler: bin/api-aws/stations
    description: serves available radio stations
    memorySize: 128
    events:
      - http:
          path: stations
          method: get
          private: true
          cors: true
  tracks:
    handler: bin/api-aws/tracks
    description: serves tracks and track statistics
    memorySize: 128
    events:
      - http:
          path: stations/{station}/tracks
          method: get
          private: true
          cors: true
  search:
    handler: bin/api-aws/search
    description: serves matching tracks for the received query
    memorySize: 128
    events:
      - http:
          path: tracks/search
          method: get
          private: true
          cors: true
  tracks-create:
    handler: bin/api-aws/tracks-create
    description: takes the marshalled track object from the request's body and persists it
    memorySize: 128
    events:
      - http:
          path: stations/{station}/tracks/{timestamp}
          method: put
          authorizer: ${self:custom.authorizer.tracks-create}
  tracks-create-authorizer:
    handler: bin/api-aws/tracks-create-authorizer
    environment:
      TRACKS_CREATE_AUTH_TOKEN: ${env:TRACKS_CREATE_AUTH_TOKEN}

resources:
  Resources:
    StationsDDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: stationId
            AttributeType: S
        KeySchema:
          - AttributeName: stationId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.StationsDDBTableName}
    TrackRecordsDDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: stationId
            AttributeType: S
          - AttributeName: airtime
            AttributeType: N
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: stationId
            KeyType: HASH
          - AttributeName: airtime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.TrackRecordsDDBTableName}
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.TrackRecordsDDBGSITypeAirtime}
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: airtime
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1