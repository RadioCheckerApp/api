service: api-aws

custom:
  StationsDDBTableName: 'stations-table-${self:provider.stage}'
  TrackRecordsDDBTableName: 'trackrecords-table-${self:provider.stage}'

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - {"Fn::GetAtt": ["StationsDDBTable", "Arn"]}
        - {"Fn::GetAtt": ["TrackRecordsDDBTable", "Arn"]}
  environment:
    STATIONS_TABLE: ${self:custom.StationsDDBTableName}
    TRACKRECORDS_TABLE: ${self:custom.TrackRecordsDDBTableName}

package:
 exclude:
   - ./**
 include:
   - ../bin/api-aws/**

functions:
  meta:
    handler: bin/api-aws/meta
    description: API meta information
    memorySize: 128
    events:
      - http:
          path: meta
          method: get
  stations:
    handler: bin/api-aws/stations
    description: serves available radio stations
    memorySize: 128
    events:
      - http:
          path: stations
          method: get

resources:
  Resources:
    StationsDDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: stationId
            AttributeType: S
        KeySchema:
          -
            AttributeName: stationId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.StationsDDBTableName}
    TrackRecordsDDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: stationId
            AttributeType: S
          - AttributeName: airtime
            AttributeType: N
        KeySchema:
          - AttributeName: stationId
            KeyType: HASH
          - AttributeName: airtime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.TrackRecordsDDBTableName}


